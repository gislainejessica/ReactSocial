{"ast":null,"code":"import _slicedToArray from \"/home/gislaine/ReactSocial/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gislaine/ReactSocial/src/pages/Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../images/icon.png';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  title: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  custonError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: '10px'\n  },\n  progress: {\n    position: \"absolute\"\n  }\n};\n\nfunction Login(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const classes = props.classes;\n\n  handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    const dadosUser = {\n      email: email,\n      senha: password\n    };\n    axios.post('/login', dadosUser).then(res => {\n      console.log(res.data);\n      localStorage.setItem('FBidToken', \"Bearer \".concat(res.data.token));\n      setLoading(false);\n      props.history.push('/');\n    }).catch(erro => {\n      setError(erro.response.data);\n      setLoading(false);\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"imagen\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    className: classes.testField,\n    helperText: erros.email,\n    error: erros.email ? true : false,\n    value: email,\n    onChange: handleChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    label: \"Senha\",\n    className: classes.testField,\n    helperText: erros.senha,\n    error: erros.senha ? true : false,\n    value: password,\n    onChange: handleChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), erros.general && React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.custonError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" \", erros.general, \" \"), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Login\", loading && React.createElement(CircularProgress, {\n    size: 30,\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" J\\xE1 tens um conta fa\\xE7a o login \", React.createElement(Link, {\n    to: \"/registr \\xB5\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500ar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"  Aqui \"), \" \"))), React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/home/gislaine/ReactSocial/src/pages/Login.js"],"names":["React","useEffect","useState","withStyles","PropTypes","Grid","logo","Typography","TextField","Button","axios","Link","CircularProgress","styles","form","textAlign","image","margin","button","marginTop","position","title","textField","custonError","color","fontSize","progress","Login","props","email","setEmail","password","setPassword","loading","setLoading","error","setError","classes","handleSubmit","event","preventDefault","dadosUser","senha","post","then","res","console","log","data","localStorage","setItem","token","history","push","catch","erro","response","handleChange","setState","target","name","value","testField","erros","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../images/icon.png';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  form: {\n    textAlign: 'center',\n  },\n  image:{\n    margin:'20px auto 20px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  title: {\n    margin:'10px auto 10px auto'\n  },\n  textField: {\n    margin:'10px auto 10px auto'\n  }, \n  custonError: {\n    color:'red',\n    fontSize: '0.8rem',\n    marginTop: '10px',\n  },\n  progress: {\n    position: \"absolute\"\n  }\n}\nfunction Login (props){\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState({})\n  const {classes} = props\n\n    handleSubmit = (event) =>{\n    event.preventDefault();\n    setLoading(true)\n    const dadosUser = {\n      email: email,\n      senha: password\n    }\n    axios.post('/login', dadosUser)\n      .then(res => {\n        console.log(res.data)\n        localStorage.setItem('FBidToken', `Bearer ${res.data.token}`)\n        setLoading(false)\n        props.history.push('/')\n      })\n      .catch(erro => {\n        setError(erro.response.data)\n        setLoading(false)\n      })\n    }\n\n    handleChange = (event) => {\n      this.setState({\n        [event.target.name] : event.target.value\n      })\n    }\n    \n    return (\n      <Grid container className = {classes.form} >\n        <Grid item sm />\n        <Grid item sm >\n          <img src = {logo} alt =\"imagen\" className = {classes.image}/>\n          <Typography variant = \"h2\" className = {classes.title}>\n            Login\n          </Typography>\n          <form noValidate onSubmit = {handleSubmit}>\n            <TextField id = 'email' name ='email' type = 'email' label = 'Email' className = {classes.testField} \n                helperText = {erros.email} error = {erros.email ? true: false} \n                value = {email} onChange = {handleChange} fullWidth/>\n\n             <TextField id = 'password' name = 'password' type = 'password' \n                label ='Senha' className = {classes.testField} \n                helperText = {erros.senha} error = {erros.senha ? true: false} \n                value = {password} onChange = {handleChange} fullWidth/>\n\n            {erros.general && (\n              <Typography variant = 'body2' className = {classes.custonError}> {erros.general} </Typography>\n            )}\n            <Button type = 'submit' variant = 'contained' color = \"primary\" \n                className = {classes.button} disabled = {loading}>  \n                Login            \n                 {loading && (<CircularProgress size = {30}className = {classes.progress}/>)}\n            </Button>\n            <br/>\n            <small> Já tens um conta faça o login <Link to = \"/registr µ──────ar\">  Aqui </Link> </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    )\n}\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}