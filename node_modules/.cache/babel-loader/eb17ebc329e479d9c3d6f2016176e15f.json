{"ast":null,"code":"import _slicedToArray from \"/home/gislaine/ReactSocial/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gislaine/ReactSocial/src/pages/Registro.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../images/icon.png';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  title: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  custonError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: '10px'\n  },\n  progress: {\n    position: \"absolute\"\n  }\n};\n\nfunction Registro({\n  classes,\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        confirmPassword = _useState6[0],\n        setConfirmPassword = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        handle = _useState8[0],\n        setHandle = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loading = _useState10[0],\n        setLoading = _useState10[1];\n\n  const _useState11 = useState({}),\n        _useState12 = _slicedToArray(_useState11, 2),\n        erros = _useState12[0],\n        setErros = _useState12[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    const novoDados = {\n      email,\n      senha: password,\n      confirma: confirmPassword,\n      handle\n    };\n    axios.post(\"/registrar\", novoDados).then(res => {\n      localStorage.setItem('FBidToken', \"Bearer \".concat(res.data.token));\n      setLoading(false);\n      history.push('/');\n    }).catch(erro => {\n      setErros(erro.response.data);\n      setLoading(false);\n    });\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"imagen\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Registrar\"), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    className: classes.testField,\n    helperText: erros.email,\n    error: erros.email ? true : false,\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    label: \"Senha\",\n    className: classes.testField,\n    helperText: erros.senha,\n    error: erros.senha ? true : false,\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    label: \"Confirma Senha\",\n    className: classes.testField,\n    helperText: erros.confirmPassword,\n    error: erros.confirmPassword ? true : false,\n    value: confirmPassword,\n    onChange: event => setConfirmPassword(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"handle\",\n    name: \"handle\",\n    type: \"text\",\n    label: \"Handle\",\n    className: classes.testField,\n    helperText: erros.handle,\n    error: erros.handle ? true : false,\n    value: handle,\n    onChange: event => setErros(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), erros.general && React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.custonError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" \", erros.general, \" \"), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Registre-se\", loading && React.createElement(CircularProgress, {\n    size: 30,\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \" N\\xE3o tem uma conta? registre-se \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"  Aqui \"), \" \"))), React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n}\n\nRegistro.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Registro);","map":{"version":3,"sources":["/home/gislaine/ReactSocial/src/pages/Registro.js"],"names":["React","useEffect","useState","Link","axios","PropTypes","Typography","TextField","Button","withStyles","CircularProgress","Grid","logo","styles","form","textAlign","image","margin","button","marginTop","position","title","textField","custonError","color","fontSize","progress","Registro","classes","history","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handle","setHandle","loading","setLoading","erros","setErros","handleSubmit","event","preventDefault","novoDados","senha","confirma","post","then","res","localStorage","setItem","data","token","push","catch","erro","response","testField","target","value","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../images/icon.png';\n\nconst styles = {\n  form: {\n    textAlign: 'center',\n  },\n  image:{\n    margin:'20px auto 20px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  title: {\n    margin:'10px auto 10px auto'\n  },\n  textField: {\n    margin:'10px auto 10px auto'\n  }, \n  custonError: {\n    color:'red',\n    fontSize: '0.8rem',\n    marginTop: '10px',\n  },\n  progress: {\n    position: \"absolute\"\n  }\n}\n\nfunction Registro({classes, history}){\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [handle, setHandle] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [erros, setErros] = useState({})\n  \n  const  handleSubmit = (event) =>{\n      event.preventDefault();\n      setLoading(true)\n      const novoDados = {\n        email,\n        senha: password,\n        confirma: confirmPassword,\n        handle\n      }\n      axios.post(\"/registrar\", novoDados)\n        .then(res => {\n          localStorage.setItem('FBidToken', `Bearer ${res.data.token}`)\n          setLoading(false)\n          history.push('/')\n        })\n        .catch(erro => {\n          setErros(erro.response.data)\n          setLoading(false)\n        })\n    }\n\n    return (\n      <Grid container className = {classes.form} >\n        <Grid item sm />\n        <Grid item sm >\n          <img src = {logo} alt =\"imagen\" className = {classes.image}/>\n          <Typography variant = \"h2\" className = {classes.title}>\n            Registrar\n          </Typography>\n          <form noValidate onSubmit = {handleSubmit}>\n            <TextField id = 'email' name ='email' type = 'email' label = 'Email' className = {classes.testField} \n                helperText = {erros.email} error = {erros.email ? true: false} \n                value = {email} onChange = {event => setEmail(event.target.value)} fullWidth/>\n\n             <TextField id = 'password' name = 'password' type = 'password' \n                label ='Senha' className = {classes.testField} \n                helperText = {erros.senha} error = {erros.senha ? true: false} \n                value = {password} onChange = {event => setPassword(event.target.value)} fullWidth/>\n\n            <TextField id = 'confirmPassword' name = 'confirmPassword' type = 'password' \n                label ='Confirma Senha' className = {classes.testField} \n                helperText = {erros.confirmPassword} error = {erros.confirmPassword ? true: false} \n                value = {confirmPassword} onChange = {event => setConfirmPassword(event.target.value)} fullWidth/>\n\n             <TextField id = 'handle' name = 'handle' type = 'text' \n                label ='Handle' className = {classes.testField} \n                helperText = {erros.handle} error = {erros.handle ? true: false} \n                value = {handle} onChange = {event => setErros(event.target.value)} fullWidth/>\n\n            {erros.general && (\n              <Typography variant = 'body2' className = {classes.custonError}> {erros.general} </Typography>\n            )}\n            <Button type = 'submit' variant = 'contained' color = \"primary\" \n                className = {classes.button} disabled = {loading}>  \n                Registre-se            \n                 {loading && (<CircularProgress size = {30}className = {classes.progress}/>)}\n            </Button>\n            <br/>\n            <small> Não tem uma conta? registre-se <Link to = \"/login\">  Aqui </Link> </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    )\n  }\n\nRegistro.propTypes = {\n  classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(Registro);\n"]},"metadata":{},"sourceType":"module"}