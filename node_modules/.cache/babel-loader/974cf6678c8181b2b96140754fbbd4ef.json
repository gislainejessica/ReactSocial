{"ast":null,"code":"var _jsxFileName = \"/home/gislaine/ReactSocial/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../images/icon.png';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  title: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  custonError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: '10px'\n  },\n  progress: {\n    position: \"absolute\"\n  }\n};\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const dadosUser = {\n        email: this.state.email,\n        senha: this.state.password\n      };\n      axios.post('/login', dadosUser).then(res => {\n        console.log(res.data);\n        localStorage.setItem('FBidToken', \"Bearer \".concat(res.data.token));\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(erro => {\n        this.setState({\n          error: erro.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      erros: {}\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          erros = _this$state.erros,\n          loading = _this$state.loading;\n    return React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"imagen\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h2\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.testField,\n      helperText: erros.email,\n      error: erros.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Senha\",\n      className: classes.testField,\n      helperText: erros.senha,\n      error: erros.senha ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), erros.general && React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.custonError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \", erros.general, \" \"), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Login\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" J\\xE1 tens um conta fa\\xE7a o login \", React.createElement(Link, {\n      to: \"/registr \\xB5\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500ar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"  Aqui \"), \" \"))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["/home/gislaine/ReactSocial/src/pages/Login.js"],"names":["React","Component","withStyles","PropTypes","Grid","logo","Typography","TextField","Button","axios","Link","CircularProgress","styles","form","textAlign","image","margin","button","marginTop","position","title","textField","custonError","color","fontSize","progress","Login","constructor","handleSubmit","event","preventDefault","setState","loading","dadosUser","email","state","senha","password","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","erro","error","response","handleChange","target","name","value","erros","render","classes","testField","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../images/icon.png';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  form: {\n    textAlign: 'center',\n  },\n  image:{\n    margin:'20px auto 20px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  title: {\n    margin:'10px auto 10px auto'\n  },\n  textField: {\n    margin:'10px auto 10px auto'\n  }, \n  custonError: {\n    color:'red',\n    fontSize: '0.8rem',\n    marginTop: '10px',\n  },\n  progress: {\n    position: \"absolute\"\n  }\n}\nclass Login extends Component {\n  constructor(){\n    super()\n    this.state ={\n      email:'',\n      password:'',\n      loading: false,\n      erros:{},\n    }\n  }\n  handleSubmit = (event) =>{\n    event.preventDefault();\n    this.setState({\n      loading : true\n    })\n    const dadosUser = {\n      email: this.state.email,\n      senha: this.state.password\n    }\n    axios.post('/login', dadosUser)\n      .then(res => {\n        console.log(res.data)\n        localStorage.setItem('FBidToken', `Bearer ${res.data.token}`)\n        this.setState({\n          loading : false\n        })\n        this.props.history.push('/')\n      })\n      .catch(erro => {\n        this.setState({\n          error: erro.response.data,\n          loading: false\n        })\n      })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name] : event.target.value\n    })\n  }\n  render() {\n    const {classes} = this.props\n    const {erros, loading} = this.state\n    return (\n      <Grid container className = {classes.form} >\n        <Grid item sm />\n        <Grid item sm >\n          <img src = {logo} alt =\"imagen\" className = {classes.image}/>\n          <Typography variant = \"h2\" className = {classes.title}>\n            Login\n          </Typography>\n          <form noValidate onSubmit = {this.handleSubmit}>\n            <TextField id = 'email' name ='email' type = 'email' label = 'Email' className = {classes.testField} \n                helperText = {erros.email} error = {erros.email ? true: false} \n                value = {this.state.email} onChange = {this.handleChange} fullWidth/>\n\n             <TextField id = 'password' name = 'password' type = 'password' \n                label ='Senha' className = {classes.testField} \n                helperText = {erros.senha} error = {erros.senha ? true: false} \n                value = {this.state.password} onChange = {this.handleChange} fullWidth/>\n\n            {erros.general && (\n              <Typography variant = 'body2' className = {classes.custonError}> {erros.general} </Typography>\n            )}\n            <Button type = 'submit' variant = 'contained' color = \"primary\" \n                className = {classes.button} disabled = {loading}>  \n                Login            \n                 {loading && (<CircularProgress size = {30}className = {classes.progress}/>)}\n            </Button>\n            <br/>\n            <small> Já tens um conta faça o login <Link to = \"/registr µ──────ar\">  Aqui </Link> </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    )\n  }\n}\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(Login);\n"]},"metadata":{},"sourceType":"module"}